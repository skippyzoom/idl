;+
; Parameters for plotting density
;-

imgSize = size(imgData)
aspect_ratio = 1.0
position = multi_position(nSteps,edges=[0.10,0.10,0.80,0.80],buffers=[0.05,0.10])
min_value = !NULL
max_value = !NULL
min_value = 0                   ;Comment out for panel-wise autoscale
max_value = max(imgData)        ;Comment out for panel-wise autoscale
title = strcompress(string(dt*timestep*1e3,format='(f5.1)'),/remove_all)
title = "t = "+title+" ms"
xmajor = 5
xminor = 7
xtickvalues = imgSize[1]*indgen(xmajor)/(xmajor-1)
xtickname = strcompress(xtickvalues,/remove_all)
xrange = [xtickvalues[0],xtickvalues[xmajor-1]]
ymajor = 5
yminor = 7
ytickvalues = imgSize[2]*indgen(ymajor)/(ymajor-1)
ytickname = strcompress(ytickvalues,/remove_all)
yrange = [ytickvalues[0],ytickvalues[ymajor-1]]
rgb_table = 3
kw_image = {axis_style: 2, $
            aspect_ratio: aspect_ratio, $
            position: position, $
            title: title, $
            xrange: xrange, $
            yrange: yrange, $
            xtickvalues: xtickvalues, $
            ytickvalues: ytickvalues, $
            xtickname: xtickname, $
            ytickname: ytickname, $
            xstyle: 1, $
            ystyle: 1, $
            xtitle: "Zonal [m]", $
            ytitle: "Vertical [m]", $
            xmajor: xmajor, $
            xminor: xminor, $
            ymajor: ymajor, $
            yminor: yminor, $
            xtickfont_size: 8.0, $
            ytickfont_size: 8.0, $
            xticklen: 0.02, $
            yticklen: 0.02/aspect_ratio, $
            xsubticklen: 0.5, $
            ysubticklen: 0.5, $
            xtickdir: 1, $
            ytickdir: 1, $
            font_size: 10.0, $
            font_name: "Times", $
            rgb_table: rgb_table, $
            buffer: 1B}
if n_elements(min_value) ne 0 then $
   kw_image = create_struct(kw_image,'min_value',min_value)
if n_elements(max_value) ne 0 then $
   kw_image = create_struct(kw_image,'max_value',max_value)

use_clr = 1B
img_pos = kw_image.position
cb_width = 0.03
cb_height = 0.40
cb_x0 = max(img_pos[2,*])+0.01
cb_x1 = cb_x0 + cb_width
cb_y0 = 0.50-0.50*cb_height
cb_y1 = 0.50+0.50*cb_height
global_colorbar = (tag_exist(kw_image,'min_value') and $
                   tag_exist(kw_image,'max_value'))
position = make_array(4,nSteps,type=4,value=-1)
if global_colorbar then position[*,0] = [cb_x0,cb_y0,cb_x1,cb_y1] $
else position = multi_position(nSteps,edges=[[reform(img_pos[2,*])],[reform(img_pos[1,*])]], $
                               width=0.02,height=img_pos[3,0]-img_pos[1,0])
major = 5
tickvalues = 0
if global_colorbar then $
   tickvalues = (kw_image.max_value-kw_image.min_value)*findgen(major)/(major-1)+ $
                kw_image.min_value
tickname = !NULL
if global_colorbar then $
   tickname = string(tickvalues,format='(f5.2)')
title = "$|E|$ [mV/m]"
kw_colorbar = {orientation: 1, $
               title: title, $
               position: position, $
               textpos: 1, $
               tickdir: 1, $
               ticklen: 0.2, $
               major: 7, $
               font_name: "Times", $
               font_size: 10.0}
if global_colorbar then $
   kw_colorbar = create_struct(kw_colorbar, $
                               'tickvalues',tickvalues, $
                               'tickname',tickname)
